{"version":3,"sources":["components/Filter/index.js","components/Card/index.js","components/List/index.js","components/Details/index.js","components/App/index.js","services/getInitialData.js","index.js"],"names":["Filter","props","handler","value","react_default","a","createElement","htmlFor","className","name","id","type","onChange","placeholder","Card","types","img","evolves","style","backgroundImage","concat","alt","map","item","index","key","List","pokemons","length","pokemon","sprites","evolvesFrom","react_router_dom","to","components_Card","front_default","Details","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","evolutions","fetchError","fetchEvols","bind","assertThisInitialized","checkEvs","data","_this2","fetch","evsUrl","then","response","json","evolutionChain","chain","species","evolves_to","setState","catch","error","acc","location","push","pokemonData","abilities","height","weight","_this$state","index_es","icon","faArrowLeft","src","back_default","faRuler","faWeight","ability","reduce","evolution","toConsumableArray","faArrowRight","React","Component","App","allPokemons","isLoading","filter","handlerFilter","results","thisPokemon","url","dataPkm","evolves_from_species","evChain","evolution_chain","Promise","all","responses","e","target","_this3","react_router","exact","path","render","routerProps","Fragment","components_Filter","components_List","toUpperCase","includes","components_Details","find","parseInt","match","params","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.957ff039.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Filter (props) {\n    const {handler, value} = props;\n    return (\n        <form>\n             <label htmlFor='filter'>Search pokemon:</label>\n            <input className='Filter__input' name='filter' id='filter' type='text' onChange={handler} value={value} placeholder=\"Bulbasaur\" />\n        </form>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport './styles.scss';\n\nfunction Card(props) {\n    const {id, types, name, img, evolves} = props;\n    return(\n      <div className='Pokemon'>\n        <div className='PkmImg' style={{backgroundImage: `url(${img})`}} alt={name}>\n        <p className='Id'>ID/{id}</p>\n        </div>\n        <h2 className=\"Name\">{name}</h2>\n        <ul className=\"ListType\">\n          {types.map((item, index) => {\n            return (\n              <li className=\"Type\" key={index}>\n                {item.type.name}\n              </li>\n            );\n          })}\n        </ul>\n        {evolves !== 'none'\n          ? <p className='Evolves'>Evolves from: <span className='Evolution'>{evolves}</span></p> \n          : <div className='NoEvol'> </div> }\n      </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './styles.scss';\nimport Card from '../Card';\n\nfunction List(props) {\n    const pokemons = props.pokemons;\n    return(\n        <ul className='PokemonUl'>\n            { pokemons.length===0\n                ? 'No matching results found.'\n                : pokemons.map(pokemon => {\n                    const {id, name, types, sprites, evolvesFrom} = pokemon;\n                    return (\n                        <li key={id}>\n                            <Link to={`/${id}`} className=\"List__link\">\n                                <Card id={id} name={name} types={types} img={sprites.front_default} evolves={evolvesFrom}/>\n                            </Link>\n                        </li>);\n                    }) \n                \n                }\n        </ul>\n    );\n}\n\nexport default List;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faRuler, faWeight, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport './styles.scss';\n\nclass Details extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            evolutions: '',\n            fetchError: '',\n        }\n        this.fetchEvols = this.fetchEvols.bind(this);\n        this.checkEvs = this.checkEvs.bind(this);\n    }\n    \n    fetchEvols(data) {\n        fetch(this.props.data.evsUrl)\n        .then(response => response.json())\n        .then(data => {\n            const evolutionChain = [[data.chain.species.name]];\n            this.checkEvs(evolutionChain, data.chain.evolves_to[0]);\n            this.setState({\n                evolutions: evolutionChain,\n            });\n        })\n        .catch(error => this.setState({fetchError: error}));\n    }\n        \n    checkEvs(acc, location){\n       if (location) {\n           acc.push(location.species.name);\n           this.checkEvs(acc, location.evolves_to[0]);\n       }\n    }\n\n    render() {\n        const pokemonData = this.props.data;            \n        if (pokemonData) {\n            const {name, sprites, abilities, height, weight}= pokemonData;\n            const {evolutions, fetchError} = this.state;\n            if(!this.state.evolutions){this.fetchEvols(pokemonData)};\n            return ( <div className='Details_card' >\n                        <Link className='Back' to='/'><FontAwesomeIcon icon={faArrowLeft} /></Link>\n                        <img className='Space' src={sprites.front_default} alt={name} />\n                        <img src={sprites.back_default} alt={name} />\n                        <h1>{name}</h1>\n                        <span className='Space' ><FontAwesomeIcon className='Icon' icon={faRuler} /> {height} </span>\n                        <span className='Space' ><FontAwesomeIcon className='Icon' icon={faWeight} /> {weight}</span>\n                        <p className='Title'>Abilities</p>\n                        <ul className='Abilities_list'>\n                            {abilities.map((item, index) => {\n                                return (\n                                    <li key={index+1} className='Ability' >{item.ability.name}</li>\n                                );\n                            })}\n                        </ul>\n                        <p className='Title'>Evolution chain:</p>\n                        <p>{ fetchError\n                                ?  'An error occured.' \n                                : evolutions.length\n                            ? evolutions.reduce((acc, evolution, index)=> acc=[...acc, <span key={index+1}><FontAwesomeIcon className='Icon' icon={faArrowRight} />{evolution}</span>]) \n                                    : 'Loading...' }\n                        </p>   \n                    </div> );\n        } else {\n            return 'Loading...' \n        }\n    }\n}\n\nexport default Details","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Filter from '../Filter';\nimport List from '../List';\nimport Details from '../Details';\nimport { fetchData } from '../../services/getInitialData'\nimport './styles.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allPokemons: [],\n      isLoading: true,\n      filter: '',\n      fetchError: '',\n    }\n    this.handlerFilter = this.handlerFilter.bind(this)\n  }\n  componentDidMount() {\n    fetchData()\n    .then(data => {\n      const pokemons = data.results;\n      const pokemonData = pokemons.map(pokemon => {\n        let thisPokemon = {};\n        return fetch(pokemon.url)\n          .then(response => response.json())\n          .then(dataPkm => {\n            thisPokemon = dataPkm;\n            return fetch(dataPkm.species.url)\n          })\n          .then(response => response.json())\n          .then(data => {\n            const evolves = data.evolves_from_species;\n            evolves? thisPokemon.evolvesFrom= evolves.name : thisPokemon.evolvesFrom= 'none';\n            const evChain = data.evolution_chain.url;\n            evChain? thisPokemon.evsUrl= evChain : thisPokemon.evsUrl= 'none';\n            return thisPokemon;\n          })\n        }\n      )\n      \n      Promise.all(pokemonData)\n      .then(responses => {\n        this.setState({\n          allPokemons: responses,\n          isLoading: false,\n        })\n      });    \n    })\n    .catch(error => this.setState({fetchError: error}));\n  }\n\n  handlerFilter(e) {\n    this.setState({filter: e.target.value});\n  }\n\n  render() {\n    const {allPokemons, isLoading, filter, fetchError}= this.state;\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n            exact path =\"/\"\n            render = { routerProps => (\n              <React.Fragment>\n                <Filter handler={this.handlerFilter} value={filter}/>\n                {fetchError\n                  ? 'An error occured.' \n                  :isLoading\n                    ? <p>Loading...</p>\n                    : <List pokemons={allPokemons.filter(pokemon => pokemon.name.toUpperCase().includes(filter.toUpperCase()))}/>\n                }\n              </React.Fragment>\n            )}\n          />\n          <Route\n              path=\"/:id\"\n              render={routerProps => {\n                return (\n                  <Details\n                    data={allPokemons.find(\n                      item => item.id === parseInt(routerProps.match.params.id)\n                    )}\n                  />\n                );\n              }}\n            />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://pokeapi.co/api/v2/pokemon/?limit=25';\n\nconst fetchData = () => fetch(ENDPOINT).then(response => response.json())\n\nexport {fetchData};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, \ndocument.getElementById('root'));"],"sourceRoot":""}